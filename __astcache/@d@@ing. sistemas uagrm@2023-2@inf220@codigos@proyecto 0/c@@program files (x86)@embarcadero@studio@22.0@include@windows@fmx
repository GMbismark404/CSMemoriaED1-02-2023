//---------------------------------------------------------------------------

#pragma hdrstop

#include "UPolinomio_m.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

Polinomio_m::Polinomio_m() {
	this->nt = 0;
	ptr_poli = nulo;
	mem = new CSMemoria();
}

direccion_m Polinomio_m::buscar_exponente(int exp){  //5
int dir = this->ptr_poli;
	if (dir != nulo) {
		int dir_exp = nulo;
		while ((dir != nulo) && (dir_exp == nulo)) {
			if (mem->obtener_dato(dir, expp) == exp)
				dir_exp = dir;
			dir = mem->obtener_dato(dir,sigp);
		}
		return dir_exp;
	}
return nulo;
}

bool Polinomio_m::es_cero() {
	return nt == 0;
}

int Polinomio_m::grado() {
int dir = this->ptr_poli;
	if (dir != nulo) {
		int maxg = mem->obtener_dato(dir, expp);  //5
		while (dir != nulo) {
			if (mem->obtener_dato(dir,expp) > maxg)
				maxg = mem->obtener_dato(dir,expp);
			dir = mem->obtener_dato(dir,sigp);
		}
		return maxg;
	}
}

int Polinomio_m::coeficiente(int coef, int exp){
int dir = buscar_exponente(exp);

}
